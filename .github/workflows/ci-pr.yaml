# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Continuous Integration - Pull Request"
on:
  pull_request:
    branches:
      - master
  repository_dispatch:
    types: [trigger-continuous-integration-pull-request]
permissions:
  contents: read
  pull-requests: write
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  code-tests:
    runs-on: [ubuntu-latest]
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.201"
      - name: Go Unit Tests
        timeout-minutes: 10
        run: |
          for SERVICE in "shippingservice" "productcatalogservice"; do
            echo "testing $SERVICE..."
            pushd src/$SERVICE
            go test
            popd
          done
      - name: C# Unit Tests
        timeout-minutes: 10
        run: |
          dotnet test src/cartservice/
  deployment-tests:
    runs-on: [ubuntu-latest]
    needs: code-tests
    strategy:
      matrix:
        profile: ["local-code"]
      fail-fast: true
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Build + Deploy PR images to minikube
        timeout-minutes: 20
        run: |
          echo "Simulate deploy to temporary namespace"
      - uses: opsgang/ga-setup-minikube@v0.1.2
        with:
          minikube-version: 1.22.0
          k8s-version: 1.21.2
      - name: Testing
        run: |
          minikube config set vm-driver docker
          minikube config set kubernetes-version v1.21.2
          minikube start
          minikube update-context
          kubectl cluster-info
          kubectl get pods -A
      - name: Query EXTERNAL_IP for staging
        timeout-minutes: 5
        run: |
          echo "
          NAMESPACE="pr${PR_NUMBER}"
          get_externalIP() {
            kubectl get service frontend-external --namespace $NAMESPACE -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
          }
          EXTERNAL_IP=$(get_externalIP)"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
          PR_NUMBER: ${{ github.event.pull_request.number }}
      - name: Smoke Test - Run Skaffold pipeline as action
        timeout-minutes: 20
        run: |
          set -x
          if [[ -a tags.json]]; then
            skaffold deploy --default-repo ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} --tag=${GITHUB_SHA} --build-artifacts=tags.json
          else
            skaffold deploy --default-repo ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} --tag=v1
          fi
      - name: Smoke Test
        timeout-minutes: 5
        run: |
          echo "Check Load Generator"
      - name: Comment EXTERNAL_IP
        timeout-minutes: 5
        env:
          COMMENTS_URL: ${{ github.event.pull_request.comments_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl \
            -X POST \
            $COMMENTS_URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": "ðŸš² PR staged at '"http://$(minikube ip)"'"}'
          sleep 60
