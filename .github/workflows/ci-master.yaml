# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Continuous Integration - Master/Release'
on:
  push:
    # run on pushes to master or release/*
    branches:
      - master
      - release/*
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  code-tests:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.201'
      - name: Go Unit Tests
        timeout-minutes: 10
        run: |
          for SERVICE in "shippingservice" "productcatalogservice"; do
            echo "testing $SERVICE..."
            pushd src/$SERVICE
            go test
            popd
          done
      - name: C# Unit Tests
        timeout-minutes: 10
        run: |
          dotnet test src/cartservice/
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
        name: checkout
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.5.0
        with:
          labels: |
            org.opencontainers.image.title=frontend
            org.opencontainers.image.source=https://github.com/${{ github.repository }}/frontend
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:prod-${{ github.sha }}-{{ github.run_number }}
      - name: Build and push Docker image
        # timeout-minutes: 20
        # run: |
        #   skaffold build --default-repo ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} --tag=${GITHUB_SHA:0:7} --file-output=tags.json
        uses: hiberbee/github-action-skaffold@1.10.0
        with:
          skaffold-version: 1.33.0
          command: build
          repository: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tag: prod-${{ github.sha }}-{{ github.run_number }}
      - name: Trigger deploy QA
        # if: success()
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: ${{ github.repository }}
          event-type: trigger-deploy-qa
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "image_tag": "prod-${{ github.sha }}-{{ github.run_number }}"}'
